<option>S1</option>
        <option>S2</option>
        <option>S3</option>
        <option>S4</option>
        <option>S5</option>
        <option>S6</option>
        <option>S7</option>
        <option>S8</option>
        <option>S9</option>
        <option>S10</option>
        <option>S11</option>

        <option>1A</option>
        <option>1B</option>
        <option>1C</option>
        <option>1D</option>
        <option>1E</option>
        <option>1F</option>
        <option>1G</option>
        <option>1H</option>
        <option>1I</option>
        <option>1J</option>
        <option>1K</option>

        <option>TA</option>
        <option>TB</option>
        <option>TC</option>
        <option>TD</option>
        <option>TE</option>
        <option>TF</option>
        <option>TG</option>
        <option>TH</option>
        <option>TI</option>
        <option>TJ</option>
        <option>TK</option>



        database.ref("users/" + user + "/score").once("value", function(snapshot) {
            console.log(snapshot.val())
            if(snapshot.val() == 0){
                setTimeout(function() {
                    window.location.href = "menu/menu.html";
                },1000);
               
            }
        })


        database.ref("groupes").once("value", function(snapshot) {
        snapshot.forEach(function(child) {
            database.ref("groupes/"+ child.key + "/members").once("value", function(snapshot) {
                let number = snapshot.numChildren();
                snapshot.forEach(function(child2) {
                    if(child2.key == user){
                        database.ref("groupes/"+ child.key + "/members/" + user).once('value').then(function(snapshot) {
                            let text = "faites parti"
                            let chef = false
                            let groupe = child.key
                            if(snapshot.val() == 1){
                                chef = true
                                text = "êtes le chef"
                            }
                            sessionStorage.setItem("chef", chef);
                            sessionStorage.setItem("groupe", groupe);
                            document.getElementById("infoGroupe").innerHTML = "vous " + text + " du groupe : " + groupe + ", qui comporte " + number + " personne(s)"
   
                        });
                    }
                });
            });
        });
    
    });



    <ul id="menu-demo2" style="margin: 20px;">
        <li><a href="#">Plus d'options</a>
          <ul >
            <li id="aide"><a href="#" ><a href="../blog/devBlog.html">devBlog</a></a></li>
            <li id="aide"><a href="#" ><a href="../forum/forum.html">Forum</a></a></li>
            <li id="aide"><a href="#" ><a href="../option/option.html">Options</a></a></li>
          </ul>
        </li>      
      </ul>



      <ul id="menu-demo2" class="tuto2">
        <li id="aide" class="tuto2"><a href="../guide/faq.html">FAQ</a></li>
      </ul>


      <ul id="menu-demo2" >
        <li class="retour"><a href="../guide/tuto.html" id="tuto" >Tutoriel</a></li>      
      </ul>


      <div style="position: sticky;">
    <div class="marquee-rtl">
        <div> Information : Le bug de connection (chargement infini) viens d'être corrigé</div>
    </div>
    </div>


    <p class="cgu">
        J'accepte les <a href="cgu/cookie.html">Cookies</a>  : <input id="checkbox2" type="checkbox" value="cookies"/>
    </p>









    <a href="POLITIQUE DE confidentialité.odt">politique de confidentialitée des données</a>



    <h1 style="color: black; margin: 30px; font-size:larger;">Historique des points</h1>
    <p id="score">score total : 0pt</p>
  <div id="container" style="width:80%; height:600px;margin-top: 10%;"></div>
    
     <!-- <div style="height:500px;width:1000px;border:solid 2px rgb(38, 61, 92);overflow:scroll;overflow-x:hidden;overflow-y:scroll;margin-left: auto;margin-right: auto;" id="divScore"></div>-->
    
/*function getStat(j,h,type,onEnd){
    let users = []
    let amis = []
    let amisTag = []

    let nbScores = []
    let usersScore = []

    let classes = []
    let usersClasse = []

    let addLinkTag = []
    let linkedTag = []
    let delLinkTag = []
    
    
    database.ref(path(j,h)+"/" + type).once("value", function(snapshot) {
        let i = 0
        snapshot.forEach(function(child) {
            let user = child.key
            
            users.push(user)
            amis[i] = []
            amisTag[i] = []
            addLinkTag[i] = []
            linkedTag[i] = []
            delLinkTag[i] = []
            
            let num = i
            database.ref(path(j,h)+"/users/" + user +"/amis").once("value", function(snapshot) {
                snapshot.forEach(function(child) {
                    let ami = child.key
                    amis[num].push(ami)
                })
            })
            i++
            
            
        });
        
        
        for(let u in users){
            let user = users[u] 
            database.ref(path(j,h)+"/users/" + user + "/score").once("value", function(snapshot) {
                let sc = snapshot.val()
                if(nbScores[sc] == null){
                    nbScores[sc] = []
                }
                nbScores[sc].push(u)
                usersScore.push(sc)
            })
            
        }

        for(let u in users){
            let user = users[u] 
            database.ref(path(j,h)+"/users/" + user + "/classe").once("value", function(snapshot) {
                let c = snapshot.val()
                if(c == null){
                    usersClasse.push("none")
                }else{
                    if(classes[c] == null){
                        classes[c] = []
                    }
                    classes[c].push(u)
                    usersClasse.push(c)
                }
            })
            
        }

 
    })


    setTimeout(function() {
        console.log("start")
        console.log(amis)
        for(let u in users){
            amisTag[u] = []
            for(let a in amis[u]){
                let index = users.indexOf(amis[u][a])
                if(index != -1){
                    amisTag[u].push(index)
                }
                
            }
        }

        
        for(let u in users){
            linkedTag[u] = []
        }
        for(let u in users){
            for(let a in amisTag[u]){
                linkedTag[amisTag[u][a]].push(parseInt(u))
                
            }
            
        }
        
        //adding link -> users needed to add if you add this user

        
        let actUser
        function searchAmis(u){
            if(addLinkTag[actUser].indexOf(u) == -1){
                addLinkTag[actUser].push(u)
                for(a in amisTag[u]){
                    searchAmis(amisTag[u][a])
                }
            }
            
        }

        for(let u in users){
            actUser = parseInt(u)
            addLinkTag[actUser] = []
            searchAmis(actUser)
        }

        //del link -> users needed to delete if you delete this user

        
        function searchLink(u){
            if(delLinkTag[actUser].indexOf(u) == -1){
                delLinkTag[actUser].push(u)
                for(l in linkedTag[u]){
                    searchLink(linkedTag[u][l])
                }
            }
            
        }

        for(let u in users){
            actUser = parseInt(u)
            delLinkTag[actUser] = []
            searchLink(actUser)
        }



        console.log("users",users)
        console.log("amis",amis)
        console.log(amisTag)
        console.log("addLinkTag",addLinkTag)
        console.log(linkedTag)
        console.log("delLinkTag",delLinkTag)
        console.log("classes",classes)
        console.log(usersClasse)
        console.log(nbScores)
        console.log("users score",usersScore)
        onEnd()

    },1000);


}*/




